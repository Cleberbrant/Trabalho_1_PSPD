// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: textprocessor.proto

package textprocessorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mensagens
type TextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextRequest) Reset() {
	*x = TextRequest{}
	mi := &file_textprocessor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextRequest) ProtoMessage() {}

func (x *TextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextRequest.ProtoReflect.Descriptor instead.
func (*TextRequest) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{0}
}

func (x *TextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type WordCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordCount     int32                  `protobuf:"varint,1,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordCountResponse) Reset() {
	*x = WordCountResponse{}
	mi := &file_textprocessor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordCountResponse) ProtoMessage() {}

func (x *WordCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordCountResponse.ProtoReflect.Descriptor instead.
func (*WordCountResponse) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{1}
}

func (x *WordCountResponse) GetWordCount() int32 {
	if x != nil {
		return x.WordCount
	}
	return 0
}

type CharCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharCount     int32                  `protobuf:"varint,1,opt,name=char_count,json=charCount,proto3" json:"char_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharCountResponse) Reset() {
	*x = CharCountResponse{}
	mi := &file_textprocessor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharCountResponse) ProtoMessage() {}

func (x *CharCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharCountResponse.ProtoReflect.Descriptor instead.
func (*CharCountResponse) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{2}
}

func (x *CharCountResponse) GetCharCount() int32 {
	if x != nil {
		return x.CharCount
	}
	return 0
}

// Para demonstrações streaming
type WordChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Position      int32                  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordChunk) Reset() {
	*x = WordChunk{}
	mi := &file_textprocessor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordChunk) ProtoMessage() {}

func (x *WordChunk) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordChunk.ProtoReflect.Descriptor instead.
func (*WordChunk) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{3}
}

func (x *WordChunk) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordChunk) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type TotalCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalWords    int32                  `protobuf:"varint,1,opt,name=total_words,json=totalWords,proto3" json:"total_words,omitempty"`
	TotalChars    int32                  `protobuf:"varint,2,opt,name=total_chars,json=totalChars,proto3" json:"total_chars,omitempty"`
	TextCount     int32                  `protobuf:"varint,3,opt,name=text_count,json=textCount,proto3" json:"text_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TotalCountResponse) Reset() {
	*x = TotalCountResponse{}
	mi := &file_textprocessor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotalCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalCountResponse) ProtoMessage() {}

func (x *TotalCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalCountResponse.ProtoReflect.Descriptor instead.
func (*TotalCountResponse) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{4}
}

func (x *TotalCountResponse) GetTotalWords() int32 {
	if x != nil {
		return x.TotalWords
	}
	return 0
}

func (x *TotalCountResponse) GetTotalChars() int32 {
	if x != nil {
		return x.TotalChars
	}
	return 0
}

func (x *TotalCountResponse) GetTextCount() int32 {
	if x != nil {
		return x.TextCount
	}
	return 0
}

type AnalysisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentWords  int32                  `protobuf:"varint,1,opt,name=current_words,json=currentWords,proto3" json:"current_words,omitempty"`
	CurrentChars  int32                  `protobuf:"varint,2,opt,name=current_chars,json=currentChars,proto3" json:"current_chars,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalysisResponse) Reset() {
	*x = AnalysisResponse{}
	mi := &file_textprocessor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisResponse) ProtoMessage() {}

func (x *AnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textprocessor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalysisResponse.ProtoReflect.Descriptor instead.
func (*AnalysisResponse) Descriptor() ([]byte, []int) {
	return file_textprocessor_proto_rawDescGZIP(), []int{5}
}

func (x *AnalysisResponse) GetCurrentWords() int32 {
	if x != nil {
		return x.CurrentWords
	}
	return 0
}

func (x *AnalysisResponse) GetCurrentChars() int32 {
	if x != nil {
		return x.CurrentChars
	}
	return 0
}

func (x *AnalysisResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_textprocessor_proto protoreflect.FileDescriptor

const file_textprocessor_proto_rawDesc = "" +
	"\n" +
	"\x13textprocessor.proto\x12\rtextprocessor\"!\n" +
	"\vTextRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"2\n" +
	"\x11WordCountResponse\x12\x1d\n" +
	"\n" +
	"word_count\x18\x01 \x01(\x05R\twordCount\"2\n" +
	"\x11CharCountResponse\x12\x1d\n" +
	"\n" +
	"char_count\x18\x01 \x01(\x05R\tcharCount\";\n" +
	"\tWordChunk\x12\x12\n" +
	"\x04word\x18\x01 \x01(\tR\x04word\x12\x1a\n" +
	"\bposition\x18\x02 \x01(\x05R\bposition\"u\n" +
	"\x12TotalCountResponse\x12\x1f\n" +
	"\vtotal_words\x18\x01 \x01(\x05R\n" +
	"totalWords\x12\x1f\n" +
	"\vtotal_chars\x18\x02 \x01(\x05R\n" +
	"totalChars\x12\x1d\n" +
	"\n" +
	"text_count\x18\x03 \x01(\x05R\ttextCount\"t\n" +
	"\x10AnalysisResponse\x12#\n" +
	"\rcurrent_words\x18\x01 \x01(\x05R\fcurrentWords\x12#\n" +
	"\rcurrent_chars\x18\x02 \x01(\x05R\fcurrentChars\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status2\xa0\x03\n" +
	"\rTextProcessor\x12J\n" +
	"\n" +
	"CountWords\x12\x1a.textprocessor.TextRequest\x1a .textprocessor.WordCountResponse\x12O\n" +
	"\x0fCountCharacters\x12\x1a.textprocessor.TextRequest\x1a .textprocessor.CharCountResponse\x12E\n" +
	"\vStreamWords\x12\x1a.textprocessor.TextRequest\x1a\x18.textprocessor.WordChunk0\x01\x12U\n" +
	"\x12CountMultipleTexts\x12\x1a.textprocessor.TextRequest\x1a!.textprocessor.TotalCountResponse(\x01\x12T\n" +
	"\x11AnalyzeTextStream\x12\x1a.textprocessor.TextRequest\x1a\x1f.textprocessor.AnalysisResponse(\x010\x01B Z\x1eserver-b-chars/textprocessorpbb\x06proto3"

var (
	file_textprocessor_proto_rawDescOnce sync.Once
	file_textprocessor_proto_rawDescData []byte
)

func file_textprocessor_proto_rawDescGZIP() []byte {
	file_textprocessor_proto_rawDescOnce.Do(func() {
		file_textprocessor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_textprocessor_proto_rawDesc), len(file_textprocessor_proto_rawDesc)))
	})
	return file_textprocessor_proto_rawDescData
}

var file_textprocessor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_textprocessor_proto_goTypes = []any{
	(*TextRequest)(nil),        // 0: textprocessor.TextRequest
	(*WordCountResponse)(nil),  // 1: textprocessor.WordCountResponse
	(*CharCountResponse)(nil),  // 2: textprocessor.CharCountResponse
	(*WordChunk)(nil),          // 3: textprocessor.WordChunk
	(*TotalCountResponse)(nil), // 4: textprocessor.TotalCountResponse
	(*AnalysisResponse)(nil),   // 5: textprocessor.AnalysisResponse
}
var file_textprocessor_proto_depIdxs = []int32{
	0, // 0: textprocessor.TextProcessor.CountWords:input_type -> textprocessor.TextRequest
	0, // 1: textprocessor.TextProcessor.CountCharacters:input_type -> textprocessor.TextRequest
	0, // 2: textprocessor.TextProcessor.StreamWords:input_type -> textprocessor.TextRequest
	0, // 3: textprocessor.TextProcessor.CountMultipleTexts:input_type -> textprocessor.TextRequest
	0, // 4: textprocessor.TextProcessor.AnalyzeTextStream:input_type -> textprocessor.TextRequest
	1, // 5: textprocessor.TextProcessor.CountWords:output_type -> textprocessor.WordCountResponse
	2, // 6: textprocessor.TextProcessor.CountCharacters:output_type -> textprocessor.CharCountResponse
	3, // 7: textprocessor.TextProcessor.StreamWords:output_type -> textprocessor.WordChunk
	4, // 8: textprocessor.TextProcessor.CountMultipleTexts:output_type -> textprocessor.TotalCountResponse
	5, // 9: textprocessor.TextProcessor.AnalyzeTextStream:output_type -> textprocessor.AnalysisResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_textprocessor_proto_init() }
func file_textprocessor_proto_init() {
	if File_textprocessor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_textprocessor_proto_rawDesc), len(file_textprocessor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_textprocessor_proto_goTypes,
		DependencyIndexes: file_textprocessor_proto_depIdxs,
		MessageInfos:      file_textprocessor_proto_msgTypes,
	}.Build()
	File_textprocessor_proto = out.File
	file_textprocessor_proto_goTypes = nil
	file_textprocessor_proto_depIdxs = nil
}
