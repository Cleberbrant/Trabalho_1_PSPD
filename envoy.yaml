static_resources:
  listeners:
    - name: grpcweb_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: all
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: gateway_cluster
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local method = request_handle:headers():get(":method")
                          if method == "OPTIONS" then
                            local headers = {
                              [":status"] = "204",
                              ["access-control-allow-origin"] = "http://localhost:3000",
                              ["access-control-allow-methods"] = "GET,POST,PUT,DELETE,OPTIONS",
                              ["access-control-allow-headers"] = "content-type,x-grpc-web,x-user-agent",
                              ["access-control-expose-headers"] = "grpc-status,grpc-message",
                              ["access-control-max-age"] = "1728000",
                              ["access-control-allow-credentials"] = "true"
                            }
                            request_handle:respond(headers, "")
                          end
                        end

                        function envoy_on_response(response_handle)
                          -- use replace to avoid duplicate header entries
                          response_handle:headers():replace("access-control-allow-origin", "http://localhost:3000")
                          response_handle:headers():replace("access-control-expose-headers", "grpc-status,grpc-message")
                          response_handle:headers():replace("access-control-allow-credentials", "true")
                        end
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: gateway_cluster
      type: LOGICAL_DNS
      connect_timeout: 1s
      http2_protocol_options: {}
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: gateway_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 4001

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
